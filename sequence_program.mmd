sequenceDiagram
    %%{init: {'theme': 'base', 'themeVariables': {'primaryColor': '#00CED1', 'primaryTextColor': '#000', 'primaryBorderColor': '#000', 'lineColor': '#000', 'secondaryColor': '#FFD700', 'tertiaryColor': '#fff' }}}%%
    
    participant User
    participant CLI as CLI Program
    participant CliUtils
    participant GitHubCli
    participant GcloudCli
    participant GitCli
    participant TerraformCli
    
    User->>+CLI: aboveit-cli init-fullstack-template
    
    CLI->>+GitHubCli: confirmAccountSetup()
    GitHubCli-->>-CLI: Display currently active GitHub account details

    CLI->>+GcloudCli: confirmAccountSetup()
    GcloudCli-->>-CLI: Display currently active Google Cloud account details
    
    CLI->>+GitHubCli: setInputs()
    GitHubCli-->>+User: Request GitHub inputs
    User-->>-GitHubCli: Provide GitHub inputs
    GitHubCli-->>-CLI: Return GitHub inputs
    
    CLI->>+GcloudCli: setInputs()
    GcloudCli-->>+User: Request Google Cloud inputs
    User-->>-GcloudCli: Provide Google Cloud inputs
    GcloudCli-->>-CLI: Return Google Cloud inputs
    
    CLI->>+CliUtils: inputEnvVariables(envVarsDefinition)
    CliUtils-->>+User: Request env variables
    User-->>-CliUtils: Provide env variables
    CliUtils-->>-CLI: Return env variables
    
    CLI->>+CliUtils: splitEnvVariables(envVarsObject)
    CliUtils-->>-CLI: Return {secrets, variables}
    CLI->>CLI: Prepare terraform variables
    
    CLI->>+GitHubCli: cloneAndDetachRepo(projectName, *repoOwner*, "aboveit-fullstack-template")
    GitHubCli-->>-CLI: 
    
    CLI->>+TerraformCli: setupTerraformFiles(projectName, terraformVars)
    TerraformCli-->>-CLI: 
    
    CLI->>+CliUtils: changeDirectory(projectName)
    CliUtils-->>-CLI: 

    CLI->>+CliUtils: makeDirectory([".github", "workflows"])
    CliUtils-->>-CLI: 
    
    CLI->>+GitCli: initRepository()
    GitCli-->>-CLI: 
    CLI->>+GitCli: stageAllFiles()
    GitCli-->>-CLI: 
    CLI->>+GitCli: commitChanges("Initial commit: add terraform files and workflows")
    GitCli-->>-CLI: 
    
    CLI->>+GitHubCli: createRepoAndPush(projectName)
    GitHubCli-->>-CLI: 
    
    CLI->>+CliUtils: changeDirectory("terraform")
    CliUtils-->>-CLI: 

    CLI->>+TerraformCli: init()
    TerraformCli-->>-CLI: 

    CLI->>+TerraformCli: apply("gcp")
    TerraformCli-->>-CLI: 
    
    CLI->>+TerraformCli: getOutput("gcp_cloudrun_url")
    TerraformCli-->>-CLI: 
    
    CLI-->>+User: Show Clerk webhook setup instructions
    User-->>-CLI: Provide Clerk webhook signing secret
    
    CLI->>CliUtils: writeJsonFile("terraform.tfvars.json", terraformVars)
    
    CLI->>+TerraformCli: apply("github")
    TerraformCli-->>-CLI: 
    
    CLI-->>-User: Deployment completed!